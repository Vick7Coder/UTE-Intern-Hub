{"ast":null,"code":"var _jsxFileName = \"D:\\\\UTE-Intern-Hub\\\\client\\\\src\\\\JobSeeker\\\\ApplicationForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, Button, Form, Row, Col } from \"react-bootstrap\";\nimport classes from \"./Modalf.module.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Config from \"../config/Config.json\";\nimport SpinnerComponent from \"../components/UI/SpinnerComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nfunction Register(props) {\n  _s();\n\n  const [inputs, setinputs] = useState({});\n  const [errors, setErrors] = useState({});\n  const [showSpinner, setSpinner] = useState(false); // console.log(props.job);\n\n  const handleChange = event => {\n    setinputs(values => {\n      if (event.target.name === \"Resume\") {\n        return { ...values,\n          [event.target.name]: event.target.files[0]\n        };\n      }\n\n      return { ...values,\n        [event.target.name]: event.target.value\n      };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    if (validate()) {\n      formData.append(\"name\", inputs.name);\n      formData.append(\"email\", inputs.email);\n      formData.append(\"resume\", inputs.Resume);\n      formData.append(\"jobId\", props.job._id);\n      formData.append(\"providerId\", props.job.providerId);\n      setSpinner(true);\n      axios.post(`${Config.SERVER_URL + \"user/apply/\" + props.job._id}`, formData, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        setSpinner(false);\n        props.changes(prev => !prev);\n        toast.success(res.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n        props.onClose();\n      }).catch(err => {\n        setSpinner(false);\n        console.log(err);\n        toast.error(\"Oops! Something went wrong!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      });\n    }\n  };\n\n  const validate = () => {\n    let isValid = true;\n    let error = {};\n\n    if (!inputs[\"name\"]) {\n      isValid = false;\n      error[\"name\"] = \"Please enter your name.\";\n    }\n\n    if (!inputs[\"email\"]) {\n      isValid = false;\n      error[\"email\"] = \"Please enter your emailID.\";\n    }\n\n    if (typeof inputs[\"email\"] !== \"undefined\") {\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(inputs[\"email\"])) {\n        isValid = false;\n        error[\"email\"] = \"Please enter valid email address.\";\n      }\n    }\n\n    if (!inputs[\"Resume\"]) {\n      isValid = false;\n      error[\"Resume\"] = \"Please choose your Resume.\";\n    }\n\n    setErrors(error);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showSpinner && /*#__PURE__*/_jsxDEV(SpinnerComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.abc,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.register,\n            style: {\n              backgroundColor: \"white\",\n              border: \"none\",\n              width: \"20rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.cardbody,\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: classes[\"control-label\"],\n                    children: [\"Applying For:\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      type: \"text\",\n                      value: props.job.title,\n                      \"aria-label\": \"Disabled input example\",\n                      disabled: true // readonly\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group-required\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        className: classes[\"control-label\"],\n                        children: [\"Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \" *\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 32\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"Enter name\",\n                        name: \"name\",\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 25\n                      }, this), errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.errors,\n                        children: [errors.name, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group-required\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        className: classes[\"control-label\"],\n                        children: [\"Email address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \" *\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"email\",\n                        placeholder: \"Enter email\",\n                        name: \"email\",\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 25\n                      }, this), errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.errors,\n                        children: errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group-required\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        className: classes[\"control-label\"],\n                        children: [\"Resume \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \" *\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 34\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"file\",\n                        placeholder: \"Choose file\",\n                        name: \"Resume\",\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 25\n                      }, this), errors.Resume ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.errors,\n                        children: errors.Resume\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    className: classes.modalButtonstyle,\n                    children: [\" \", \"Submit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    className: classes.modalButtonStyle,\n                    onClick: props.onClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"1vDiBLqHHPYA1B0toGr/bYM91tY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/UTE-Intern-Hub/client/src/JobSeeker/ApplicationForm.js"],"names":["React","Card","Button","Form","Row","Col","classes","axios","useState","toast","Config","SpinnerComponent","configure","Register","props","inputs","setinputs","errors","setErrors","showSpinner","setSpinner","handleChange","event","values","target","name","files","value","handleSubmit","preventDefault","formData","FormData","validate","append","email","Resume","job","_id","providerId","post","SERVER_URL","headers","Authorization","localStorage","getItem","then","res","changes","prev","success","data","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onClose","catch","err","console","log","error","isValid","pattern","RegExp","test","abc","register","backgroundColor","border","width","cardbody","title","color","modalButtonstyle","modalButtonStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport classes from \"./Modalf.module.css\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Config from \"../config/Config.json\";\r\nimport SpinnerComponent from \"../components/UI/SpinnerComponent\";\r\n\r\ntoast.configure();\r\n\r\nfunction Register(props) {\r\n  const [inputs, setinputs] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [showSpinner, setSpinner] = useState(false);\r\n  // console.log(props.job);\r\n\r\n  const handleChange = (event) => {\r\n    setinputs((values) => {\r\n      if (event.target.name === \"Resume\") {\r\n        return {\r\n          ...values,\r\n          [event.target.name]: event.target.files[0],\r\n        };\r\n      }\r\n      return {\r\n        ...values,\r\n        [event.target.name]: event.target.value,\r\n      };\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    if (validate()) {\r\n      formData.append(\"name\", inputs.name);\r\n      formData.append(\"email\", inputs.email);\r\n      formData.append(\"resume\", inputs.Resume);\r\n      formData.append(\"jobId\", props.job._id);\r\n      formData.append(\"providerId\", props.job.providerId);\r\n\r\n      setSpinner(true);\r\n      axios\r\n        .post(\r\n          `${Config.SERVER_URL + \"user/apply/\" + props.job._id}`,\r\n          formData,\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setSpinner(false);\r\n          props.changes((prev) => !prev);\r\n          toast.success(res.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          props.onClose();\r\n        })\r\n        .catch((err) => {\r\n          setSpinner(false);\r\n          console.log(err);\r\n          toast.error(\"Oops! Something went wrong!\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    let error = {};\r\n\r\n    if (!inputs[\"name\"]) {\r\n      isValid = false;\r\n      error[\"name\"] = \"Please enter your name.\";\r\n    }\r\n    if (!inputs[\"email\"]) {\r\n      isValid = false;\r\n      error[\"email\"] = \"Please enter your emailID.\";\r\n    }\r\n    if (typeof inputs[\"email\"] !== \"undefined\") {\r\n      var pattern = new RegExp(\r\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n      );\r\n      if (!pattern.test(inputs[\"email\"])) {\r\n        isValid = false;\r\n        error[\"email\"] = \"Please enter valid email address.\";\r\n      }\r\n    }\r\n\r\n    if (!inputs[\"Resume\"]) {\r\n      isValid = false;\r\n      error[\"Resume\"] = \"Please choose your Resume.\";\r\n    }\r\n    setErrors(error);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showSpinner && <SpinnerComponent />}\r\n      <div className={classes.abc}>\r\n        <Row>\r\n          <Col sm={4}></Col>\r\n          <Col sm={4}>\r\n            <Card\r\n              className={classes.register}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"none\",\r\n                width: \"20rem\",\r\n              }}\r\n            >\r\n              <Card.Body>\r\n                <div className={classes.cardbody}>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Form.Label className={classes[\"control-label\"]}>\r\n                      Applying For:{\" \"}\r\n                    </Form.Label>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        value={props.job.title}\r\n                        aria-label=\"Disabled input example\"\r\n                        disabled\r\n                        // readonly\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <div className=\"form-group-required\">\r\n                        <Form.Label className={classes[\"control-label\"]}>\r\n                          Name <span style={{ color: \"red\" }}> *</span>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Enter name\"\r\n                          name=\"name\"\r\n                          onChange={handleChange}\r\n                        />\r\n                        {errors.name ? (\r\n                          <div className={classes.errors}>{errors.name} </div>\r\n                        ) : null}\r\n                      </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                      <div className=\"form-group-required\">\r\n                        <Form.Label className={classes[\"control-label\"]}>\r\n                          Email address <span style={{ color: \"red\" }}> *</span>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"email\"\r\n                          placeholder=\"Enter email\"\r\n                          name=\"email\"\r\n                          onChange={handleChange}\r\n                        />\r\n                        {errors.email ? (\r\n                          <div className={classes.errors}>{errors.email}</div>\r\n                        ) : null}\r\n                      </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                      <div className=\"form-group-required\">\r\n                        <Form.Label className={classes[\"control-label\"]}>\r\n                          Resume <span style={{ color: \"red\" }}> *</span>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"file\"\r\n                          placeholder=\"Choose file\"\r\n                          name=\"Resume\"\r\n                          onChange={handleChange}\r\n                        />\r\n                        {errors.Resume ? (\r\n                          <div className={classes.errors}>{errors.Resume}</div>\r\n                        ) : null}\r\n                      </div>\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" className={classes.modalButtonstyle}>\r\n                      {\" \"}\r\n                      Submit\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className={classes.modalButtonStyle}\r\n                      onClick={props.onClose}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Form>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}