{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst calculateRange = (data, rowsPerPage) => {\n  const range = [];\n  const num = Math.ceil(data.length / rowsPerPage);\n\n  for (let i = 1; i <= num; i++) {\n    range.push(i);\n  }\n\n  return range;\n};\n\nconst sliceData = (data, page, rowsPerPage) => {\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\n};\n\nconst useTable = (data, page, rowsPerPage) => {\n  _s();\n\n  const [tableRange, setTableRange] = useState([]);\n  const [slice, setSlice] = useState([]);\n  useEffect(() => {\n    const range = calculateRange(data, rowsPerPage);\n    setTableRange([...range]);\n    const slice = sliceData(data, page, rowsPerPage);\n    setSlice([...slice]);\n  }, [data, setTableRange, page, setSlice, rowsPerPage]);\n  return {\n    slice,\n    range: tableRange\n  };\n};\n\n_s(useTable, \"6WC9h+Gz2mUecmNIQPN7Q27vSx4=\");\n\nexport default useTable;","map":{"version":3,"sources":["D:/UTE-Intern-Hub/client/src/Job Provider/Components/Hooks/useTable.js"],"names":["useState","useEffect","calculateRange","data","rowsPerPage","range","num","Math","ceil","length","i","push","sliceData","page","slice","useTable","tableRange","setTableRange","setSlice"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AAC5C,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAUL,IAAI,CAACM,MAAL,GAAcL,WAAxB,CAAZ;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,GAArB,EAA0BI,CAAC,EAA3B,EAA+B;AAC7BL,IAAAA,KAAK,CAACM,IAAN,CAAWD,CAAX;AACD;;AACD,SAAOL,KAAP;AACD,CAPD;;AASA,MAAMO,SAAS,GAAG,CAACT,IAAD,EAAOU,IAAP,EAAaT,WAAb,KAA6B;AAC7C,SAAOD,IAAI,CAACW,KAAL,CAAW,CAACD,IAAI,GAAG,CAAR,IAAaT,WAAxB,EAAqCS,IAAI,GAAGT,WAA5C,CAAP;AACD,CAFD;;AAGA,MAAMW,QAAQ,GAAG,CAACZ,IAAD,EAAOU,IAAP,EAAaT,WAAb,KAA6B;AAAA;;AAC5C,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,KAAD,EAAQI,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,KAAK,GAAGH,cAAc,CAACC,IAAD,EAAOC,WAAP,CAA5B;AACAa,IAAAA,aAAa,CAAC,CAAC,GAAGZ,KAAJ,CAAD,CAAb;AAEA,UAAMS,KAAK,GAAGF,SAAS,CAACT,IAAD,EAAOU,IAAP,EAAaT,WAAb,CAAvB;AACAc,IAAAA,QAAQ,CAAC,CAAC,GAAGJ,KAAJ,CAAD,CAAR;AACD,GANQ,EAMN,CAACX,IAAD,EAAOc,aAAP,EAAsBJ,IAAtB,EAA4BK,QAA5B,EAAsCd,WAAtC,CANM,CAAT;AAQA,SAAO;AAAEU,IAAAA,KAAF;AAAST,IAAAA,KAAK,EAAEW;AAAhB,GAAP;AACD,CAbD;;GAAMD,Q;;AAeN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice, rowsPerPage]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nexport default useTable;\r\n"]},"metadata":{},"sourceType":"module"}