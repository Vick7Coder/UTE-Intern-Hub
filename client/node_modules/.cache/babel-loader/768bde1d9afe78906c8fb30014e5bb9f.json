{"ast":null,"code":"var _jsxFileName = \"D:\\\\UTE-Intern-Hub\\\\client\\\\src\\\\components\\\\navigation\\\\Navigation.jsx\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { Link, useNavigate, NavLink } from \"react-router-dom\";\n// import classes from \"./Navigation.module.css\";\n// import { Navbar, Container, Nav, Dropdown } from \"react-bootstrap\";\n// import { useDispatch } from \"react-redux\";\n// import jwtDecode from \"jwt-decode\";\n// const Navigation = () => {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const authToken = localStorage.getItem(\"token\");\n//   const redAuthToken = jwtDecode(authToken);\n//   const logoutHandler = () => {\n//     dispatch({ type: \"CLEARAUTHTOKEN\" });\n//     navigate(\"/\", { replace: true });\n//   };\n//   return (\n//     <Navbar\n//       fixed=\"top\"\n//       variant=\"dark\"\n//       expand=\"md\"\n//       bg=\"white\"\n//       className={classes.nav}\n//     >\n//       <Container fluid>\n//         <NavLink\n//           className={classes.brand}\n//           to=\"/dashboard\"\n//         >\n//           <img src={\"/images/logo.svg\"} alt=\"logo\" style={{ width: \"160px\", height: \"40px\" }} />\n//         </NavLink>\n//         <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n//         <Navbar.Collapse id=\"navbar-dark-example\">\n//           {redAuthToken.role === \"Admin\" && (\n//             <Nav className={`me-auto ${classes.pageLinks}`}>\n//               <NavLink\n//                 style={{ color: \"black\" }}\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/manage-users\"\n//               >\n//                 Người dùng\n//               </NavLink>\n//               <NavLink style={{ color: \"black\" }}\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/manage-jobs\"\n//               >\n//                 Công việc\n//               </NavLink>\n//               <NavLink style={{ color: \"black\" }}\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/reports\"\n//               >\n//                 Tài liệu\n//               </NavLink>\n//               <NavLink style={{ color: \"black\" }}\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/blog\"\n//               >\n//                 Blog\n//               </NavLink>\n//             </Nav>\n//           )}\n//           {redAuthToken.role === \"Job Provider\" && (\n//             <Nav className={`me-auto ${classes.pageLinks}`}>\n//               <NavLink\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/manage-applicants\"\n//               >\n//                 Applicant\n//               </NavLink>\n//               <NavLink\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/manage-jobs\"\n//               >\n//                 Jobs\n//               </NavLink>\n//               <NavLink\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/provider-report\"\n//               >\n//                 Reports\n//               </NavLink>\n//             </Nav>\n//           )}\n//           {redAuthToken.role === \"User\" && (\n//             <Nav className={`me-auto ${classes.pageLinks}`}>\n//               <NavLink\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/dashboard\"\n//               >\n//                 Apply\n//               </NavLink>\n//               <NavLink\n//                 className={(navData) =>\n//                   navData.isActive ? classes.active : \"\"\n//                 }\n//                 to=\"/appliedJobs\"\n//               >\n//                 Applied Jobs\n//               </NavLink>\n//             </Nav>\n//           )}\n//           <Nav>\n//             <Dropdown align={\"end\"} className={classes.dropDown}>\n//               <Dropdown.Toggle className={classes.user}>\n//                 <span className={classes.username}>\n//                   <span className={classes.userLogo}>\n//                     <i className=\"bi bi-person-circle\"></i>\n//                   </span>\n//                   {redAuthToken.userName}\n//                 </span>\n//               </Dropdown.Toggle>\n//               <Dropdown.Menu>\n//                 <Link to=\"/change-password\" className={classes.changePassword}>\n//                   Đổi mật khẩu\n//                 </Link>\n//                 <Dropdown.Divider />\n//                 <Dropdown.Item\n//                   as={\"button\"}\n//                   onClick={logoutHandler}\n//                   className={classes.changePassword}\n//                 >\n//                   Đăng xuất\n//                 </Dropdown.Item>\n//               </Dropdown.Menu>\n//             </Dropdown>\n//           </Nav>\n//         </Navbar.Collapse>\n//       </Container>\n//     </Navbar>\n//   );\n// };\n// export default Navigation;\nimport React from \"react\";\nimport { Link, useNavigate, NavLink } from \"react-router-dom\";\nimport { Navbar, Container, Nav, Dropdown } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Navigation() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const authToken = useSelector(state => state.auth.token); // Get token from Redux store\n\n  const decodedToken = authToken ? jwtDecode(authToken) : null;\n\n  const logoutHandler = () => {\n    dispatch({\n      type: \"CLEARAUTHTOKEN\"\n    });\n    navigate(\"/\", {\n      replace: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-light bg-light fixed-top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"navbar-brand\",\n        to: \"/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-linkedin fa-2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"navbarSupportedContent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"navbarSupportedContent\",\n        children: [decodedToken && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav ms-auto mb-2 mb-lg-0\",\n          children: [decodedToken.role === \"Admin\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                className: \"nav-link\",\n                to: \"/manage-users\",\n                children: \"Ng\\u01B0\\u1EDDi d\\xF9ng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)\n          }, void 0, false), decodedToken.role === \"Job Provider\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                className: \"nav-link\",\n                to: \"/manage-applicants\",\n                children: \"Applicant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)\n          }, void 0, false), decodedToken.role === \"User\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                className: \"nav-link\",\n                to: \"/dashboard\",\n                children: \"Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), decodedToken && /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            align: \"end\",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-user-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), \" \", decodedToken.userName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/change-password\",\n                className: \"dropdown-item\",\n                children: \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: logoutHandler,\n                children: \"\\u0110\\u0103ng xu\\u1EA5t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navigation, \"KonXUWGIcwufaHV7ULcmrwtHUxs=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = Navigation;\n;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["D:/UTE-Intern-Hub/client/src/components/navigation/Navigation.jsx"],"names":["React","Link","useNavigate","NavLink","Navbar","Container","Nav","Dropdown","useDispatch","useSelector","jwtDecode","Navigation","navigate","dispatch","authToken","state","auth","token","decodedToken","logoutHandler","type","replace","role","userName"],"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","sourcesContent":["// import React from \"react\";\r\n\r\n// import { Link, useNavigate, NavLink } from \"react-router-dom\";\r\n// import classes from \"./Navigation.module.css\";\r\n// import { Navbar, Container, Nav, Dropdown } from \"react-bootstrap\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import jwtDecode from \"jwt-decode\";\r\n\r\n// const Navigation = () => {\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n\r\n//   const authToken = localStorage.getItem(\"token\");\r\n//   const redAuthToken = jwtDecode(authToken);\r\n\r\n//   const logoutHandler = () => {\r\n//     dispatch({ type: \"CLEARAUTHTOKEN\" });\r\n//     navigate(\"/\", { replace: true });\r\n//   };\r\n\r\n//   return (\r\n//     <Navbar\r\n//       fixed=\"top\"\r\n//       variant=\"dark\"\r\n//       expand=\"md\"\r\n//       bg=\"white\"\r\n//       className={classes.nav}\r\n\r\n//     >\r\n//       <Container fluid>\r\n\r\n//         <NavLink\r\n//           className={classes.brand}\r\n//           to=\"/dashboard\"\r\n//         >\r\n//           <img src={\"/images/logo.svg\"} alt=\"logo\" style={{ width: \"160px\", height: \"40px\" }} />\r\n//         </NavLink>\r\n//         <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\r\n//         <Navbar.Collapse id=\"navbar-dark-example\">\r\n//           {redAuthToken.role === \"Admin\" && (\r\n//             <Nav className={`me-auto ${classes.pageLinks}`}>\r\n//               <NavLink\r\n//                 style={{ color: \"black\" }}\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/manage-users\"\r\n//               >\r\n//                 Người dùng\r\n//               </NavLink>\r\n//               <NavLink style={{ color: \"black\" }}\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/manage-jobs\"\r\n//               >\r\n//                 Công việc\r\n//               </NavLink>\r\n//               <NavLink style={{ color: \"black\" }}\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/reports\"\r\n//               >\r\n//                 Tài liệu\r\n//               </NavLink>\r\n//               <NavLink style={{ color: \"black\" }}\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/blog\"\r\n//               >\r\n//                 Blog\r\n//               </NavLink>\r\n//             </Nav>\r\n//           )}\r\n//           {redAuthToken.role === \"Job Provider\" && (\r\n//             <Nav className={`me-auto ${classes.pageLinks}`}>\r\n//               <NavLink\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/manage-applicants\"\r\n//               >\r\n//                 Applicant\r\n//               </NavLink>\r\n//               <NavLink\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/manage-jobs\"\r\n//               >\r\n//                 Jobs\r\n//               </NavLink>\r\n//               <NavLink\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/provider-report\"\r\n//               >\r\n//                 Reports\r\n//               </NavLink>\r\n//             </Nav>\r\n//           )}\r\n//           {redAuthToken.role === \"User\" && (\r\n//             <Nav className={`me-auto ${classes.pageLinks}`}>\r\n//               <NavLink\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/dashboard\"\r\n//               >\r\n//                 Apply\r\n//               </NavLink>\r\n//               <NavLink\r\n//                 className={(navData) =>\r\n//                   navData.isActive ? classes.active : \"\"\r\n//                 }\r\n//                 to=\"/appliedJobs\"\r\n//               >\r\n//                 Applied Jobs\r\n//               </NavLink>\r\n//             </Nav>\r\n//           )}\r\n//           <Nav>\r\n//             <Dropdown align={\"end\"} className={classes.dropDown}>\r\n//               <Dropdown.Toggle className={classes.user}>\r\n//                 <span className={classes.username}>\r\n//                   <span className={classes.userLogo}>\r\n//                     <i className=\"bi bi-person-circle\"></i>\r\n//                   </span>\r\n//                   {redAuthToken.userName}\r\n//                 </span>\r\n//               </Dropdown.Toggle>\r\n\r\n//               <Dropdown.Menu>\r\n//                 <Link to=\"/change-password\" className={classes.changePassword}>\r\n//                   Đổi mật khẩu\r\n//                 </Link>\r\n//                 <Dropdown.Divider />\r\n//                 <Dropdown.Item\r\n//                   as={\"button\"}\r\n//                   onClick={logoutHandler}\r\n//                   className={classes.changePassword}\r\n//                 >\r\n//                   Đăng xuất\r\n//                 </Dropdown.Item>\r\n//               </Dropdown.Menu>\r\n//             </Dropdown>\r\n//           </Nav>\r\n//         </Navbar.Collapse>\r\n//       </Container>\r\n//     </Navbar>\r\n//   );\r\n// };\r\n\r\n// export default Navigation;\r\nimport React from \"react\";\r\nimport { Link, useNavigate, NavLink } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav, Dropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nfunction Navigation() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const authToken = useSelector((state) => state.auth.token); // Get token from Redux store\r\n  const decodedToken = authToken ? jwtDecode(authToken) : null;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch({ type: \"CLEARAUTHTOKEN\" });\r\n    navigate(\"/\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n      <div className=\"container\">\r\n        <NavLink className=\"navbar-brand\" to=\"/dashboard\">\r\n          <i className=\"fab fa-linkedin fa-2x\" />\r\n        </NavLink>\r\n\r\n        {/* ... (Search form - You might need to adjust based on your requirements) ... */}\r\n\r\n        <Navbar.Toggle aria-controls=\"navbarSupportedContent\" />\r\n        <Navbar.Collapse id=\"navbarSupportedContent\">\r\n\r\n          {/* Conditional Links Based on User Role */}\r\n          {decodedToken && (\r\n            <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n              {decodedToken.role === \"Admin\" && (\r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/manage-users\">Người dùng</NavLink>\r\n                  </li>\r\n                  {/* Add other admin links here */}\r\n                </>\r\n              )}\r\n              {decodedToken.role === \"Job Provider\" && (\r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/manage-applicants\">Applicant</NavLink>\r\n                  </li>\r\n                  {/* Add other job provider links here */}\r\n                </>\r\n              )}\r\n              {decodedToken.role === \"User\" && (\r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/dashboard\">Apply</NavLink>\r\n                  </li>\r\n                  {/* Add other user links here */}\r\n                </>\r\n              )}\r\n            </ul>\r\n          )}\r\n\r\n          {/* User Dropdown */}\r\n          {decodedToken && (\r\n            <Nav>\r\n              <Dropdown align=\"end\">\r\n                <Dropdown.Toggle>\r\n                  <span>\r\n                    <i className=\"fas fa-user-circle\"></i> {decodedToken.userName}\r\n                  </span>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Link to=\"/change-password\" className=\"dropdown-item\">Đổi mật khẩu</Link>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item onClick={logoutHandler}>Đăng xuất</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}